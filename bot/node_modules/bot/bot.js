// const express = require("express");
// const puppeteer = require("puppeteer");
// const app = express();
// const PORT = 8000;

// const FLAG = process.env.FLAG;
// const BASE_URL = process.env.BASE_URL || "http://0.0.0.0";

// app.use(express.json());

// function sleep(s) {
//     return new Promise((resolve) => setTimeout(resolve, s));
// }

// app.post("/visit", async (req, res) => {
//     let { url } = req.body;
//     if (!url) {
//         return res.status(400).json({ error: "URL is required" });
//     }

//     if (!url.startsWith(BASE_URL)) {
//         return res
//             .status(400)
//             .json({ error: `URL must start with ${BASE_URL}` });
//     }

//     let browser;
//     try {
//         browser = await puppeteer.launch({
//             headless: true,
//             args: [
//                 '--no-sandbox',
//                 '--disable-setuid-sandbox',
//                 '--disable-dev-shm-usage',
//                 '--disable-accelerated-2d-canvas',
//                 '--disable-gpu',
//                 '--window-size=800x600',
//             ],
//         });
//         const page = await browser.newPage();
//         await page.setCookie({
//             name: "flag",
//             value: FLAG,
//             url: BASE_URL,
//         });
//         await page.goto(url, { waitUntil: "networkidle2", timeout: 9999 });
//         await sleep(5000);
//         await browser.close();
//         res.json({ status: "success" });
//     } catch (error) {
//         console.error(`Error visiting page: ${error}`);
//         res.status(500).json({ error: error.toString() });
//     } finally {
//         if (browser) {
//             await browser.close();
//         }
//     }
// });

// app.listen(PORT, () => {
//     console.log(`Bot service running on port ${PORT}`);
// });





const puppeteer = require('puppeteer');

const sleep = ms => new Promise(res => setTimeout(res, ms));

const CONFIG = {
    APPNAME: process.env['APPNAME'] || "Admin",
    APPURL: process.env['APPURL'] || "http://127.0.0.1:8000",
    APPURLREGEX: process.env['APPURLREGEX'] || "^.*$",
    APPFLAG: process.env['APPFLAG'] || "dev{flag}",
    APPLIMITTIME: Number(process.env['APPLIMITTIME'] || "60"),
    APPLIMIT: Number(process.env['APPLIMIT'] || "5"),
}

console.table(CONFIG)

const initBrowser = puppeteer.launch({
    executablePath: "/usr/bin/chromium-browser",
    headless: 'new',
    args: [
        '--disable-dev-shm-usage',
        '--no-sandbox',
        '--disable-setuid-sandbox',
        '--disable-gpu',
        '--no-gpu',
        '--disable-default-apps',
        '--disable-translate',
        '--disable-device-discovery-notifications',
        '--disable-software-rasterizer',
        '--disable-xss-auditor'
    ],
    ipDataDir: '/home/bot/data/',
    ignoreHTTPSErrors: true
});

console.log("Bot started...");

module.exports = {
    name: CONFIG.APPNAME,
    urlRegex: CONFIG.APPURLREGEX,
    rateLimit: {
        windowS: CONFIG.APPLIMITTIME,
        max: CONFIG.APPLIMIT
    },
    bot: async (urlToVisit) => {
        const browser = await initBrowser;
        const context = await browser.createIncognitoBrowserContext()
        try {
            // Goto main page
            const page = await context.newPage();

            url = CONFIG.APPURL;
            console.log(`domain: ${new URL(url).hostname}`)
            await page.setCookie({ name: 'flag', value: 'FLAGGGGGGGGGGGREALLLL', domain: new URL(url).hostname, httpOnly: true});

            // Visit URL from user
            console.log(`bot visiting ${urlToVisit}`)
            await page.goto(urlToVisit, {
                timeout: 3000,
                waitUntil: 'domcontentloaded'
            });
            // await page.waitForTimeout(5000);
            await sleep(20000)

            // Close
            console.log("browser close...")
            await context.close()
            return true;
        } catch (e) {
            console.error(e);
            await context.close();
            return false;
        }
    }
}